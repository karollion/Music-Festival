/*
 * Â© 2023 Snyk Limited
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompositeError = void 0;
const types_1 = require("./types");
class CompositeError extends Error {
    constructor(errors) {
        super('CompositeError');
        this.errors = errors;
    }
    /**
     * Convert this CompositeError to JsonApi.
     * If the error was created with 'instance' metadata then that will be used by default for all errors.
     * @param instance string the instance to use for the errors in this CompositeError. Overrides 'instance' metadata
     * @returns JsonApi a JsonApi object representing this CompositeError
     */
    toJsonApi(instance) {
        const payload = {
            jsonapi: {
                version: '1.0',
            },
            errors: this.errors.map((error) => error.toJsonApiErrorObject(instance)),
        };
        return new types_1.JsonApi(payload);
    }
}
exports.CompositeError = CompositeError;
//# sourceMappingURL=composite-error.js.map