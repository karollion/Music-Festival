/*
 * © 2023 Snyk Limited
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnsupportedContainerVendorError = exports.UndefinedContainerVendorError = exports.UnsupportedDebianDistroError = exports.UndefinedContainerDistroError = exports.TooManyIssuesError = exports.TooManyPurlsError = exports.InvalidPaginationParametersError = exports.InternalServerError = exports.VulndbNextError = exports.VulnDBInvalidResponseError = exports.VulnerabilityServiceUnavailableError = exports.PackageNotFoundError = exports.UnsupportedGoVersionFormatError = exports.ComponentNotSupportedError = exports.MissingComponentError = exports.UnsupportedEcosystemError = exports.NamespaceNotProvidedError = exports.InvalidPurlError = exports.AuthorizationRequestFailureError = exports.OrganizationNotWhitelistedError = void 0;
const problem_error_1 = require("../problem-error");
/**
 * @class
 * @name OrganizationNotWhitelistedError
 * @description You likely don’t have access to the features in Beta. To get access, you can request access to features in Beta through your account manager or team.
 * @summary Your Organisation is not authorized to perform this action
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class OrganizationNotWhitelistedError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Your Organisation is not authorized to perform this action',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-1040',
            status: 403,
            errorCode: 'SNYK-OSSI-1040',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.OrganizationNotWhitelistedError = OrganizationNotWhitelistedError;
/**
 * @class
 * @name AuthorizationRequestFailureError
 * @description Unexpected error when authenticating. Try again, and if the error still occurs, contact support.
 * @summary Authorization request failure
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class AuthorizationRequestFailureError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Authorization request failure',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-1050',
            status: 500,
            errorCode: 'SNYK-OSSI-1050',
            level: 'fatal',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.AuthorizationRequestFailureError = AuthorizationRequestFailureError;
/**
 * @class
 * @name InvalidPurlError
 * @description Make sure that the purl is valid. See the Package URL specification link for further information.
 *
 * See more:
 * - [https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst](https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst)
 * @summary Invalid purl
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class InvalidPurlError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Invalid purl',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2010',
            status: 400,
            errorCode: 'SNYK-OSSI-2010',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [
                'https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst',
            ] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.InvalidPurlError = InvalidPurlError;
/**
 * @class
 * @name NamespaceNotProvidedError
 * @description You have requested a package type that requires a namespace (e.g. maven group id). Provide the namespace to retrieve the package.
 *
 * See more:
 * - [https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst](https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst)
 * @summary Namespace not specified
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class NamespaceNotProvidedError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Namespace not specified',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2011',
            status: 400,
            errorCode: 'SNYK-OSSI-2011',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [
                'https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst',
            ] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.NamespaceNotProvidedError = NamespaceNotProvidedError;
/**
 * @class
 * @name UnsupportedEcosystemError
 * @description The package type is not supported. Check the List issues for a package in Snyk API.
 * @summary Unsupported ecosystem
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class UnsupportedEcosystemError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Unsupported ecosystem',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2020',
            status: 400,
            errorCode: 'SNYK-OSSI-2020',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.UnsupportedEcosystemError = UnsupportedEcosystemError;
/**
 * @class
 * @name MissingComponentError
 * @description A list of components of the purl spec is required. The purl did not specify all the required components.
 * @summary Purl components required
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class MissingComponentError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Purl components required',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2021',
            status: 400,
            errorCode: 'SNYK-OSSI-2021',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.MissingComponentError = MissingComponentError;
/**
 * @class
 * @name ComponentNotSupportedError
 * @description Remove the unsupported component and retry the request.
 * @summary Unsupported purl components
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class ComponentNotSupportedError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Unsupported purl components',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2022',
            status: 400,
            errorCode: 'SNYK-OSSI-2022',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.ComponentNotSupportedError = ComponentNotSupportedError;
/**
 * @class
 * @name UnsupportedGoVersionFormatError
 * @description Go pseudo version not supported.
 * @summary Go version format not supported
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class UnsupportedGoVersionFormatError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Go version format not supported',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2023',
            status: 400,
            errorCode: 'SNYK-OSSI-2023',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.UnsupportedGoVersionFormatError = UnsupportedGoVersionFormatError;
/**
 * @class
 * @name PackageNotFoundError
 * @description The package you specified in the purl cannot be found in the vulnerability database. Check the package name, ecosystem, and version, then try again.
 * @summary Requested package not found
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class PackageNotFoundError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Requested package not found',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2030',
            status: 404,
            errorCode: 'SNYK-OSSI-2030',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.PackageNotFoundError = PackageNotFoundError;
/**
 * @class
 * @name VulnerabilityServiceUnavailableError
 * @description This issue is unexpected, and the service will recover shortly. If the error still occurs, contact support.
 * @summary Vulnerability service not available
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class VulnerabilityServiceUnavailableError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Vulnerability service not available',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2031',
            status: 503,
            errorCode: 'SNYK-OSSI-2031',
            level: 'error',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.VulnerabilityServiceUnavailableError = VulnerabilityServiceUnavailableError;
/**
 * @class
 * @name VulnDBInvalidResponseError
 * @description An unexpected error occurred. Please try again, and if you continue to experience issues please contact support.
 * @summary This issue is unexpected and the service should recover quickly if not please contact support
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class VulnDBInvalidResponseError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'This issue is unexpected and the service should recover quickly if not please contact support',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2032',
            status: 500,
            errorCode: 'SNYK-OSSI-2032',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.VulnDBInvalidResponseError = VulnDBInvalidResponseError;
/**
 * @class
 * @name VulndbNextError
 * @description An unexpected error occurred with the vulnerability service. Please try again, and if you continue to experience issues please contact support.
 * @summary This issue is unexpected and the service should recover quickly if not please contact support
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class VulndbNextError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'This issue is unexpected and the service should recover quickly if not please contact support',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2033',
            status: 500,
            errorCode: 'SNYK-OSSI-2033',
            level: 'error',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.VulndbNextError = VulndbNextError;
/**
 * @class
 * @name InternalServerError
 * @description This issue is unexpected, and the service will recover shortly. If the error still occurs, contact support.
 * @summary Request not processed due to unexpected error
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class InternalServerError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Request not processed due to unexpected error',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2040',
            status: 500,
            errorCode: 'SNYK-OSSI-2040',
            level: 'error',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.InternalServerError = InternalServerError;
/**
 * @class
 * @name InvalidPaginationParametersError
 * @description The pagination limit is > 1 and ≤ 1000, and the offset is ≥0.
 * @summary Invalid pagination parameters
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class InvalidPaginationParametersError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Invalid pagination parameters',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2041',
            status: 400,
            errorCode: 'SNYK-OSSI-2041',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.InvalidPaginationParametersError = InvalidPaginationParametersError;
/**
 * @class
 * @name TooManyPurlsError
 * @description The number of purls sent in the request exceeds the limit of 1000 set by the service.
 * @summary purls exceed limit
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class TooManyPurlsError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'purls exceed limit',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2042',
            status: 400,
            errorCode: 'SNYK-OSSI-2042',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.TooManyPurlsError = TooManyPurlsError;
/**
 * @class
 * @name TooManyIssuesError
 * @description The number of issues found for the provided purls exceeds the limit defined by the API. Reduce the number of purls sent in a single request.
 * @summary Number of issues exceeds limit
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class TooManyIssuesError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Number of issues exceeds limit',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2043',
            status: 400,
            errorCode: 'SNYK-OSSI-2043',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.TooManyIssuesError = TooManyIssuesError;
/**
 * @class
 * @name UndefinedContainerDistroError
 * @description The given Package URL does not have a required distro qualifier.
 *
 * See more:
 * - [https://docs.snyk.io/scan-containers/how-snyk-container-works/supported-operating-system-distributions#debian](https://docs.snyk.io/scan-containers/how-snyk-container-works/supported-operating-system-distributions#debian)
 * @summary Expected distro to be present
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class UndefinedContainerDistroError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Expected distro to be present',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2044',
            status: 400,
            errorCode: 'SNYK-OSSI-2044',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [
                'https://docs.snyk.io/scan-containers/how-snyk-container-works/supported-operating-system-distributions#debian',
            ] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.UndefinedContainerDistroError = UndefinedContainerDistroError;
/**
 * @class
 * @name UnsupportedDebianDistroError
 * @description This Debian distro is currently not supported.
 * @summary Unsupported Debian distro
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class UnsupportedDebianDistroError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Unsupported Debian distro',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2045',
            status: 400,
            errorCode: 'SNYK-OSSI-2045',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.UnsupportedDebianDistroError = UnsupportedDebianDistroError;
/**
 * @class
 * @name UndefinedContainerVendorError
 * @description The given Package URL does not have a required namespace.
 * @summary Expected namespace to be present
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class UndefinedContainerVendorError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Expected namespace to be present',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2046',
            status: 400,
            errorCode: 'SNYK-OSSI-2046',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.UndefinedContainerVendorError = UndefinedContainerVendorError;
/**
 * @class
 * @name UnsupportedContainerVendorError
 * @description The given Package URL does not contain a supported vendor.
 * @summary Unsupported vendor
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class UnsupportedContainerVendorError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Unsupported vendor',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-ossi-2047',
            status: 400,
            errorCode: 'SNYK-OSSI-2047',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.UnsupportedContainerVendorError = UnsupportedContainerVendorError;
//# sourceMappingURL=PurlVulnerabilityFetching-error-catalog.js.map