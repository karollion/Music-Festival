/*
 * Â© 2023 Snyk Limited
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvalidDepGraphError = exports.EmptyRequestBodyError = exports.MissingAuthTokenError = exports.DepGraphResponseError = exports.UnsupportedProjectError = exports.IaCOrSASTProjectError = exports.UnexpectedParseDepGraphError = exports.UnexpectedDepGraphResponseError = exports.InternalServerError = void 0;
const problem_error_1 = require("../problem-error");
/**
 * @class
 * @name InternalServerError
 * @description An unexpected error occurred during the SBOM generation. Review the request, then try again. If the error persists, contact Snyk Support.
 * @summary SBOM generation export server error
 * @category SbomExport
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class InternalServerError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'SBOM generation export server error',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-os-9000',
            status: 500,
            errorCode: 'SNYK-OS-9000',
            level: 'error',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.InternalServerError = InternalServerError;
/**
 * @class
 * @name UnexpectedDepGraphResponseError
 * @description An unexpected dependency graph error occurred. Review the request, then try again. If the error persists, contact Snyk Support.
 * @summary Dependency graph error
 * @category SbomExport
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class UnexpectedDepGraphResponseError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Dependency graph error',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-os-9001',
            status: 500,
            errorCode: 'SNYK-OS-9001',
            level: 'error',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.UnexpectedDepGraphResponseError = UnexpectedDepGraphResponseError;
/**
 * @class
 * @name UnexpectedParseDepGraphError
 * @description The dependency graph cannot be parsed due to an unexpected error. Review the request, then try again. If the error persists, contact Snyk Support.
 * @summary Error parsing dependency graph
 * @category SbomExport
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class UnexpectedParseDepGraphError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Error parsing dependency graph',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-os-9002',
            status: 500,
            errorCode: 'SNYK-OS-9002',
            level: 'error',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.UnexpectedParseDepGraphError = UnexpectedParseDepGraphError;
/**
 * @class
 * @name IaCOrSASTProjectError
 * @description Only SBOMs for Snyk Open Source or Snyk Container projects are supported.
 * @summary SBOM not supported due to project type
 * @category SbomExport
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class IaCOrSASTProjectError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'SBOM not supported due to project type',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-os-9003',
            status: 404,
            errorCode: 'SNYK-OS-9003',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.IaCOrSASTProjectError = IaCOrSASTProjectError;
/**
 * @class
 * @name UnsupportedProjectError
 * @description Only SBOMs for open source projects are supported (Snyk Open Source).
 * @summary SBOM not supported
 * @category SbomExport
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class UnsupportedProjectError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'SBOM not supported',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-os-9004',
            status: 404,
            errorCode: 'SNYK-OS-9004',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.UnsupportedProjectError = UnsupportedProjectError;
/**
 * @class
 * @name DepGraphResponseError
 * @description The server cannot process the request due to incomplete data. Review the request, then try again.
 * @summary Dependency graph request cannot be processed
 * @category SbomExport
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class DepGraphResponseError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Dependency graph request cannot be processed',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-os-9005',
            status: 404,
            errorCode: 'SNYK-OS-9005',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.DepGraphResponseError = DepGraphResponseError;
/**
 * @class
 * @name MissingAuthTokenError
 * @description The API token is misconfigured or expired. Configure or generate the API token, then try again.
 *
 * See more:
 * - [https://docs.snyk.io/snyk-api-info/revoking-and-regenerating-snyk-api-tokens](https://docs.snyk.io/snyk-api-info/revoking-and-regenerating-snyk-api-tokens)
 * @summary Authorization failed due to missing API token
 * @category SbomExport
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class MissingAuthTokenError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Authorization failed due to missing API token',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-os-9006',
            status: 401,
            errorCode: 'SNYK-OS-9006',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [
                'https://docs.snyk.io/snyk-api-info/revoking-and-regenerating-snyk-api-tokens',
            ] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.MissingAuthTokenError = MissingAuthTokenError;
/**
 * @class
 * @name EmptyRequestBodyError
 * @description The body of the request is empty. Review the request, then try again.
 * @summary Client request cannot be processed
 * @category SbomExport
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class EmptyRequestBodyError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Client request cannot be processed',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-os-9007',
            status: 400,
            errorCode: 'SNYK-OS-9007',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.EmptyRequestBodyError = EmptyRequestBodyError;
/**
 * @class
 * @name InvalidDepGraphError
 * @description The request cannot be processed due to an internal error. Review the request, then try again.
 * @summary Invalid dependency graph
 * @category SbomExport
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
class InvalidDepGraphError extends problem_error_1.ProblemError {
    constructor(details, additionalData, cause, instance) {
        super({
            title: 'Invalid dependency graph',
            type: 'https://docs.snyk.io/more-info/error-catalog#snyk-os-9008',
            status: 400,
            errorCode: 'SNYK-OS-9008',
            level: 'warn',
            instance,
        }, details, Object.assign({ links: [] }, additionalData), cause);
        this.name = this.constructor.name;
    }
}
exports.InvalidDepGraphError = InvalidDepGraphError;
//# sourceMappingURL=SbomExport-error-catalog.js.map