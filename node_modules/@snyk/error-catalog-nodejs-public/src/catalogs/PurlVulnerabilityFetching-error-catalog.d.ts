/*
 * © 2023 Snyk Limited
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ProblemError } from '../problem-error';
/**
 * @class
 * @name OrganizationNotWhitelistedError
 * @description You likely don’t have access to the features in Beta. To get access, you can request access to features in Beta through your account manager or team.
 * @summary Your Organisation is not authorized to perform this action
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class OrganizationNotWhitelistedError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name AuthorizationRequestFailureError
 * @description Unexpected error when authenticating. Try again, and if the error still occurs, contact support.
 * @summary Authorization request failure
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class AuthorizationRequestFailureError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name InvalidPurlError
 * @description Make sure that the purl is valid. See the Package URL specification link for further information.
 *
 * See more:
 * - [https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst](https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst)
 * @summary Invalid purl
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class InvalidPurlError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name NamespaceNotProvidedError
 * @description You have requested a package type that requires a namespace (e.g. maven group id). Provide the namespace to retrieve the package.
 *
 * See more:
 * - [https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst](https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst)
 * @summary Namespace not specified
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class NamespaceNotProvidedError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name UnsupportedEcosystemError
 * @description The package type is not supported. Check the List issues for a package in Snyk API.
 * @summary Unsupported ecosystem
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class UnsupportedEcosystemError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name MissingComponentError
 * @description A list of components of the purl spec is required. The purl did not specify all the required components.
 * @summary Purl components required
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class MissingComponentError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name ComponentNotSupportedError
 * @description Remove the unsupported component and retry the request.
 * @summary Unsupported purl components
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class ComponentNotSupportedError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name UnsupportedGoVersionFormatError
 * @description Go pseudo version not supported.
 * @summary Go version format not supported
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class UnsupportedGoVersionFormatError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name PackageNotFoundError
 * @description The package you specified in the purl cannot be found in the vulnerability database. Check the package name, ecosystem, and version, then try again.
 * @summary Requested package not found
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class PackageNotFoundError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name VulnerabilityServiceUnavailableError
 * @description This issue is unexpected, and the service will recover shortly. If the error still occurs, contact support.
 * @summary Vulnerability service not available
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class VulnerabilityServiceUnavailableError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name VulnDBInvalidResponseError
 * @description An unexpected error occurred. Please try again, and if you continue to experience issues please contact support.
 * @summary This issue is unexpected and the service should recover quickly if not please contact support
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class VulnDBInvalidResponseError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name VulndbNextError
 * @description An unexpected error occurred with the vulnerability service. Please try again, and if you continue to experience issues please contact support.
 * @summary This issue is unexpected and the service should recover quickly if not please contact support
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class VulndbNextError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name InternalServerError
 * @description This issue is unexpected, and the service will recover shortly. If the error still occurs, contact support.
 * @summary Request not processed due to unexpected error
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class InternalServerError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name InvalidPaginationParametersError
 * @description The pagination limit is > 1 and ≤ 1000, and the offset is ≥0.
 * @summary Invalid pagination parameters
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class InvalidPaginationParametersError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name TooManyPurlsError
 * @description The number of purls sent in the request exceeds the limit of 1000 set by the service.
 * @summary purls exceed limit
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class TooManyPurlsError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name TooManyIssuesError
 * @description The number of issues found for the provided purls exceeds the limit defined by the API. Reduce the number of purls sent in a single request.
 * @summary Number of issues exceeds limit
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class TooManyIssuesError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name UndefinedContainerDistroError
 * @description The given Package URL does not have a required distro qualifier.
 *
 * See more:
 * - [https://docs.snyk.io/scan-containers/how-snyk-container-works/supported-operating-system-distributions#debian](https://docs.snyk.io/scan-containers/how-snyk-container-works/supported-operating-system-distributions#debian)
 * @summary Expected distro to be present
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class UndefinedContainerDistroError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name UnsupportedDebianDistroError
 * @description This Debian distro is currently not supported.
 * @summary Unsupported Debian distro
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class UnsupportedDebianDistroError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name UndefinedContainerVendorError
 * @description The given Package URL does not have a required namespace.
 * @summary Expected namespace to be present
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class UndefinedContainerVendorError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name UnsupportedContainerVendorError
 * @description The given Package URL does not contain a supported vendor.
 * @summary Unsupported vendor
 * @category PurlVulnerabilityFetching
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class UnsupportedContainerVendorError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
