/*
 * Â© 2023 Snyk Limited
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ProblemError } from '../problem-error';
/**
 * @class
 * @name InvalidRequestError
 * @description The provided request payload is not valid for the selected ecosystem. Please review the API documentation.
 *
 * See more:
 * - [https://apidocs.snyk.io/](https://apidocs.snyk.io/)
 * @summary Invalid request
 * @category IsolatedBuilds
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class InvalidRequestError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name BuildEnvironmentNotFoundError
 * @description The build environment for the provided context could not be found. Please ensure you have created the build environment first.
 * @summary Build environment not found
 * @category IsolatedBuilds
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class BuildEnvironmentNotFoundError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
/**
 * @class
 * @name UnsupportedEcosystemError
 * @description The language or package manager is not supported.
 *
 * See more:
 * - [https://docs.snyk.io/scan-applications/supported-languages-and-frameworks/supported-languages-frameworks-and-feature-availability-overview#open-source-and-licensing-snyk-open-source](https://docs.snyk.io/scan-applications/supported-languages-and-frameworks/supported-languages-frameworks-and-feature-availability-overview#open-source-and-licensing-snyk-open-source)
 * @summary Unsupported Ecosystem
 * @category IsolatedBuilds
 * @param {string} details                         the specific details that causes this error
 * @param {Record<string, any>} [additionalData]   a collection of relevant data specific to this error
 * @param {Error} [cause]                          the `Error` type that caused this error to be thrown
 * @param {string} [instance]                      the instance to use for this error. Overrides 'instance' metadata
 */
export declare class UnsupportedEcosystemError extends ProblemError {
    constructor(details: string, additionalData?: Record<string, any>, cause?: Error, instance?: string);
}
