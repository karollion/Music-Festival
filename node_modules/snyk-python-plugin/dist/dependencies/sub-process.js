"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.executeSync = exports.execute = void 0;
const child_process_1 = require("child_process");
const shescape_1 = require("shescape");
function makeSpawnOptions(options) {
    const spawnOptions = {
        shell: true,
        env: Object.assign({}, process.env),
    };
    if (options && options.cwd) {
        spawnOptions.cwd = options.cwd;
    }
    if (options && options.env) {
        spawnOptions.env = options.env;
    }
    // Before spawning an external process, we look if we need to restore the system proxy configuration,
    // which overides the cli internal proxy configuration.
    if (process.env.SNYK_SYSTEM_HTTP_PROXY !== undefined) {
        spawnOptions.env.HTTP_PROXY = process.env.SNYK_SYSTEM_HTTP_PROXY;
    }
    if (process.env.SNYK_SYSTEM_HTTPS_PROXY !== undefined) {
        spawnOptions.env.HTTPS_PROXY = process.env.SNYK_SYSTEM_HTTPS_PROXY;
    }
    if (process.env.SNYK_SYSTEM_NO_PROXY !== undefined) {
        spawnOptions.env.NO_PROXY = process.env.SNYK_SYSTEM_NO_PROXY;
    }
    return spawnOptions;
}
function execute(command, args, options) {
    const spawnOptions = makeSpawnOptions(options);
    args = (0, shescape_1.quoteAll)(args, spawnOptions);
    return new Promise((resolve, reject) => {
        let stdout = '';
        let stderr = '';
        const proc = (0, child_process_1.spawn)(command, args, spawnOptions);
        proc.stdout.on('data', (data) => {
            stdout = stdout + data;
        });
        proc.stderr.on('data', (data) => {
            stderr = stderr + data;
        });
        proc.on('close', (code) => {
            if (code !== 0) {
                return reject(stdout || stderr);
            }
            resolve(stdout || stderr);
        });
    });
}
exports.execute = execute;
function executeSync(command, args, options) {
    const spawnOptions = makeSpawnOptions(options);
    args = (0, shescape_1.quoteAll)(args, spawnOptions);
    return (0, child_process_1.spawnSync)(command, args, spawnOptions);
}
exports.executeSync = executeSync;
//# sourceMappingURL=sub-process.js.map